{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","format","ProjectList","projects","map","id","key","projects_ProjectSummary","Notifications","notifications","item","user","content","time","fromNow","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b13992f.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n//this component has no state, just a functional component\nimport { signOut } from '../../store/actions/authActions'\nimport {connect} from 'react-redux'\nconst SignedInLinks=(props)=>{\n\n\treturn (\n     <div>\n\t\t<ul className=\"right\">\n\t\t <li> <NavLink to='/create'> New Project </NavLink></li>\n\t\t  <li><a onClick={props.signOut}> Log Out </a></li>\n\t         <li> <NavLink to='/' className='btn btn-floating pink lighten-1'> \n\t\t         {props.profile.initials}\n\t\t         </NavLink>\n\t         </li>\n\t\t</ul> \n\t</div>\n\t)\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    \n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n\n  }\n}\n\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email, \n      newUser.password\n    ).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n//this component has no state, just a functional component\n\nconst SignedOutLinks=()=>{\n\n\treturn (\n\n\t\t<ul className=\"right\">\n\t\t <li> <NavLink to='/signup'>Sign Up </NavLink></li>\n\t\t <li> <NavLink to='/signin'> Log In</NavLink></li>\n         \n\t\t</ul> \n\n\t)\n\n}\n\nexport default SignedOutLinks\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n//this component has no state, just a functional component\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport {connect} from 'react-redux'\nconst Navbar=(props)=>{\n\n\tconst { auth, profile } = props;\n  // console.log(auth);\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n\n\treturn (\n\n\t\t<nav className=\"nav.nav-wrapper,gret,darken-3\">\n\t\t\t<div className=\"container\">\n\t\t\t<Link to='/' className=\"brand-logo\"> Ping's Planner </Link>\n\t\t\t{links}\n\t\t\t</div>\n\t\t</nav>\n\n\t\t)\n\n}\n\nconst mapStateToProps=(state)=>{\n  \n  return{\n  \tauth: state.firebase.auth,\n  \tprofile: state.firebase.profile\n\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary=({project})=>{\n\n\treturn (\n\n\n       <div className=\"card z-depth-0 project-summary\">\n        <div className=\"card-content grey-text text-darken-3\">\n          <span className=\"card-title \">{project.title}</span>\n          <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n          <p className=\"grey-text\">{moment(project.createdAt.toDate()).format('MMMM Do YYYY, h:mm:ss a')}</p>\n        </div>\n      </div>\n\n\t)\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport {Link} from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id}>\n          <ProjectSummary project={project}/>\n          </Link>\n        )\n      })}  \n    </div>\n  )\n}\n\nexport default ProjectList","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n\n  const {notifications}=props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            { notifications && notifications.map(item =>{\n              return <li key={item.id}>\n                <span className=\"pink-text\">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">\n                {moment(item.time.toDate()).fromNow()}\n                </div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications","import React, { Component } from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport Notifications from './Notifications'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n  render() {\n    \n    // console.log(this.props);\n    const { projects,auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  \n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications \n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' , orderBy:['createdAt', 'desc']},\n    {collection: 'notifications', limit:3, orderBy: ['time','desc']}\n  ])\n)(Dashboard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\n\n\nconst ProjectDetails = (props) => {\n  const { project,auth } = props;\n\n  if (!auth.uid) return <Redirect to='/signin' /> \n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate()).format('MMMM Do YYYY, h:mm:ss a')}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'projects'\n  }])\n)(ProjectDetails)","//we want to store the local state what the user type into the form.\n//so its a class based component\nimport React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {signIn} from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value //update the state with value that matches the id\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault(); \n    //prevent default action of form being submited and form being refresh when user click on the botton\n    this.props.signIn(this.state) //this state=creditial\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return {\n    signIn: (creds)=>dispatch(signIn(creds))\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n\n    const {  auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {createProject} from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n  render() {\n\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n          <div className=\"input-field\">\n            <input type=\"text\" id='title' onChange={this.handleChange} />\n            <label htmlFor=\"title\">Project Title</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            <label htmlFor=\"content\">Project Content</label>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\nconst mapDispatchToProps=(dispatch)=>{\n  return {\n    \n    createProject: (project)=>dispatch(createProject(project))\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)","\n\n\nexport const createProject=(project)=>{\n\treturn(dispatch, getState, {getFirestore})=>{ //dispatch is a method. dispatch an action to reducer\n\t\t//make async call to database\n\n\t\tconst firestore = getFirestore();\n    const profile=getState().firebase.profile;\n    const authorId=getState().firebase.auth.uid;\n\t\t \n\t\tfirestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n    });\n  }\n};\n\n","import React, { Component } from 'react';\n\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path='/' component={Dashboard}/>\n            <Route path='/project/:id' component={ProjectDetails}/>\n            <Route path='/signin' component={SignIn}/>\n            <Route path='/signup' component={SignUp}/>\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n          \n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n      \t...state,\n        authError: null\n      }\n     case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success')\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error')\n      return {\n        ...state,\n        authError: action.err.message\n      }\n    default:\n      return state\n  }\n};\n\nexport default authReducer;\n\n","const initState={\n\n\tprojects: [\n    {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n    {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n    {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n  ]\n}\n\n\n\nconst projectReducer=(state=initState, action)=>{\n\tswitch(action.type){\n\t\tcase 'CREATE_PROJECT':\n\t\t\tconsole.log('created project', action.project)\n\t\t\treturn state\n\t\tcase 'CREATE_PROJECT_ERROR':\n\t\t\tconsole.log('create project error', action.err)\n\t\t\treturn state\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n\n\t\n\n}\n\n\nexport default projectReducer\n","\nimport authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport {combineReducers} from 'redux'\nimport { firestoreReducer } from 'redux-firestore';//premade reducer,syn firestore data with store. \nimport {firebaseReducer} from 'react-redux-firebase';\n\n\n\nconst rootReducer=combineReducers({\n\tauth: authReducer,\n\tproject: projectReducer,\n\tfirestore: firestoreReducer, //sync our firestore to the state with firestoereducer\n\tfirebase: firebaseReducer //will sync our auth status from firebase  with our redux app in the state and \n});\n\nexport default rootReducer\n\n","\nimport firebase from 'firebase/app' //basic feature of fb\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\n\n\n//initilize firebase\nvar config = {\n    apiKey: \"AIzaSyAlBP7xejfF3dpIVUHBtPqE5kqbggo8WAU\",\n    authDomain: \"project-management-99d4d.firebaseapp.com\",\n    databaseURL: \"https://project-management-99d4d.firebaseio.com\",\n    projectId: \"project-management-99d4d\",\n    storageBucket: \"project-management-99d4d.appspot.com\",\n    messagingSenderId: \"953872372828\"\n  };\n  firebase.initializeApp(config);\n\n  firebase.firestore().settings({timestampsInSnapshots: true})\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport rootReducer from './store/reducer/rootReducer'\n//provider pass store into app, so the app can access to the store\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk' //middleware, need to apply to the store\nimport {reduxFirestore,getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\n//applyMiddleware takes a list of middleware like thunk, and turn it into store enhanceer\n//enhance store with extra functionality, -> return a function inside our action creator and interact with database\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig,{userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}), // redux binding for firebase\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.unregister();\n\n}); //promise based, wait until firebase is ready\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}